// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "m2"
            url = "https://plugins.gradle.org/m2/"
        }
        maven {
            name = "jitpack"
            url = "https://jitpack.io"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'com.github.jriwanek:cursegradle:master-SNAPSHOT'
    }
}

plugins {
    //id "com.matthewprenger.cursegradle" version "1.0.9"
}

repositories {
    maven {
        name 'LDTTeam Artifactory'
        url 'https://ldtteam.jfrog.io/ldtteam/modding'
    }
}

apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
apply plugin: 'com.matthewprenger.cursegradle'

sourceCompatibility = 1.8
targetCompatibility = 1.8

//Buildscript: armory
// Load the properties of this project.
ext.configFile = file "build.properties"

//Reference the properties inside the project:
configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

//These configurations are needed for uploading to a MavenRepo:
configurations {
    deployerJars
}

//Initializing the mod environment
version = config.minecraft_version.toString() + "-" + System.getenv()["Version"]
group = "com.ldtteam.armory.weaponry"
archivesBaseName = "armory-weaponry"

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    runDir = "run"

    mappings = "snapshot_20180421"

    useDepAts = true

    //Replacing stuff inside the code:
    replace "@VERSION@", project.version
    replace "@MCVERSION@", config.minecraft_version
    replace "@APIVERSION@", project.version
}

dependencies {
    //Mod dependencies
    deobfCompile('com.ldtteam:armory:1.12.2-' + config.armory_version + ':api'){
        exclude group: 'mezz.jei'
        exclude group: 'com.ldtteam'
    }
    
    runtime('com.ldtteam:armory:1.12.2-' + config.armory_version) {
        exclude group: 'mezz.jei'
        exclude group: 'com.ldtteam'
    }
    
    deobfCompile('com.ldtteam:smithscore:1.12.2-0.20.+')
    
    deobfCompile ("slimeknights.mantle:Mantle:" + config.slimeknights_mc_version + "-" + config.mantle_version) {
        exclude group: 'mezz.jei'
    }
    deobfCompile ("slimeknights:TConstruct:"+ config.slimeknights_mc_version + "-" + config.tcon_version) {
        exclude group: 'mezz.jei'
    }

    compile 'org.jetbrains:annotations:15.0'
}

sourceSets {
    main {
        java {
            srcDir 'src/main'
        }
        resources {
            srcDir 'src/resources'
        }
    }
    test {
        java {
            srcDir 'src/test/main'
        }
    }
}

//This will process all the resources used during build, and needed for running the project
processResources {
    //Replaces stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'VERSION': project.version, 'MCVERSION': project.minecraft.version
    }

    //Copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    exclude '**/Thumbs.db'
}


curseforge {
    if (System.getenv().CURSEAPIKEY != null && System.getenv().CURSERELEASETYPE != null)
    {
        apiKey = System.getenv().CURSEAPIKEY

        project {
            id = '231236'

            changelog = file("build/changelog.md")
            changelogType = "markdown"

            releaseType = System.getenv().CURSERELEASETYPE

            mainArtifact (jar) {
                displayName = "Armory - Weaponry: " + version

                relations {
                    requiredDependency 'armory-armoring-the-world' // Armory
                    requiredDependency 'tinkers-construct' //Tcon
                }
            }

            addArtifact sourceJar
        }
    }
    else
    {
        logger.lifecycle("Cannot run the CurseUpload sequence. No API-Key or release type has been provided.")
    }
}

task("createChangelog") {
    group = 'upload'

    doLast {
        def teamCityURL = "https://teamcity.minecolonies.com/"
        def file = new FileOutputStream("build/changelog.md")
        def out = new BufferedOutputStream(file)

        println("Retrieving changes from: " + teamCityURL + "guestAuth/app/rest/changes?locator=build:(id:" + teamcity["teamcity.build.id"] + ")")
        def changesXML = new XmlSlurper().parse(teamCityURL + "guestAuth/app/rest/changes?locator=build:(id:" + teamcity["teamcity.build.id"] + ")")

        def changes = changesXML.change
        println("createChangelog: Identified " + changes.size() + " changes to be written into the changelog.")

        out << "# Armory - Weaponry Changelog \n"
        out << "## Version: _" + version + "_ \n"

        if (changes.size() > 0) {
            for (int i = 0; i < changes.size(); i++) {
                def changeDetailsURL = teamCityURL + "guestAuth/app/rest/changes/id:" + changes[i].@id.text()
                def changeDetailsXml = new XmlSlurper().parse(changeDetailsURL)
                def changeComment = changeDetailsXml.comment.text().trim().split("\n")[0]

                out << "* " + changeComment + "\n"
            }
        } else {
            out << "No Changes detected!"
        }

        out.close()
    }
}
